// This is a simplified schema for SQLite deployment
// SQLite doesn't support enums, so we use strings instead

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  role      String   @default("VIEWER") // ADMIN, EDITOR, VIEWER
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model StaffMember {
  id           String  @id @default(cuid())
  name         String
  email        String?
  phone        String?
  role         String?
  grade        String?
  subjects     String? // JSON string for subjects array
  category     String  @default("TEACHING") // LEADERSHIP, TEACHING, ADMIN, SUPPORT
  imageUrl     String?
  favoriteQuote String?
  order        Int     @default(0)
  isActive     Boolean @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("staff_members")
}

model BoardMember {
  id          String   @id @default(cuid())
  name        String
  role        String
  type        String   @default("MEMBER") // EXECUTIVE, REPRESENTATIVE, MEMBER
  email       String?
  bio         String?
  order       Int      @default(0)
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("board_members")
}

model NewsArticle {
  id          String   @id @default(cuid())
  title       String
  content     String
  summary     String?
  imageUrl    String?
  isPublished Boolean  @default(false)
  publishedAt DateTime?
  priority    String   @default("MEDIUM") // LOW, MEDIUM, HIGH, URGENT
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("news_articles")
}

model Event {
  id          String   @id @default(cuid())
  title       String
  description String
  startDate   DateTime
  endDate     DateTime?
  location    String?
  imageUrl    String?
  category    String   @default("ACADEMIC") // ACADEMIC, SPIRITUAL, CELEBRATION, SPORTS, CULTURAL, COMMUNITY, EXTRA_MURAL, HOLIDAY
  isPublished Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("events")
}

model AcademicCalendar {
  id          String   @id @default(cuid())
  title       String
  description String?
  startDate   DateTime
  endDate     DateTime?
  type        String   @default("OTHER") // TERM_START, TERM_END, HOLIDAY, EXAM, SPORTS_DAY, CULTURAL_DAY, PARENT_MEETING, OTHER
  isHoliday   Boolean  @default(false)
  isExam      Boolean  @default(false)
  isPublicHoliday Boolean @default(false)
  grade       String?  @default("all")
  category    String   @default("academic")
  location    String?
  time        String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("academic_calendar")
}
