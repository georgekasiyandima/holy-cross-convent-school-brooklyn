version: '3.8'

services:
  # Frontend (React App)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://backend:5000
    depends_on:
      - backend
    restart: unless-stopped

  # Backend (Node.js API)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=file:./prisma/dev.db
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - PORT=5000
    volumes:
      - ./backend/prisma:/app/prisma
      - ./backend/uploads:/app/uploads
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

  # Database (SQLite - for development)
  # For production, consider PostgreSQL or MySQL
  database:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=holycross
      - POSTGRES_USER=holycross
      - POSTGRES_PASSWORD=your-database-password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  postgres_data:
